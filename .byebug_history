exit
response.body
exit
to_state == next_state_index
to_state <= states_data.last
to_state <= states_data.last && to_state == next_state_index
exit
Vehicle.last
response.body
params
exit
params
params[:new_state_index]
Vehicle.find(params[:id])
s
into 8
into line
i
n
params
change_state!(params)
change_state!(params).id
result.success?
n
params
exit
response.body
exit
params
vehicle.id
post "/api/v1/vehicles/#{vehicle.id}/change_state", params: params
post "/api/v1/admin/vehicles/#{vehicle.id}/delete", params: params
exit
response.body
exit
params
response.body
exit
exirt
c
exit
update!(params).first.id
update!(params)
exit
response.body
exit
response.body
Vehicle.all
exit
Vehicle.all
response.body
params
c
params
exit
params
exit
params
response.body
exit
params
response.body
exit
value
exit
response.body
c
exit
params
exit
params
Integer(value)
c
Integer(value)
c
exit
params
exit
params
response.body
exit
foo.reload
foo.save
foo.current_state_index = "5"
foo = Vehicle.find("246")
Vehicle.find("246")
Vehicle.find()
Vehicle.create
Integer("eqeeq") rescue ArgumentError "hey"
Integer("eqeeq") rescue ArgumentError
Integer("eqeeq") rescue "hey"
Integer("eqeeq")
response.body
exit
params.dig(:vehicle, :current_state_index)
params.dig(:vehicle, :current_state_index)params.dig(:vehicle, :current_state_index)\
Integer("2")
Integer("rwr")
"rwr".to_i
params[:vehicle][:current_state_index].to_i
params[:vehicle][:current_state_index]
params
c
exit
response.body
exit
response.body
response.status
exit
rspec
response.status
response.body
exit
response.body
exit
exir
response.body
exit
response.body
exit
response.body
exit
response.status
response.body
exit
response.body
exit
c
exit
params
exit
params
response.body
exit
params
get "/api/v1/admin/vehicles/#{vehicle.id}", params: params
vehicle.id
vehicle
c
exit
response.body
exit
response.body
subject
exit
params
exit
response.body
c
exit
c
params
c
params
exit
params
exit
gloval_varibles
token
local_variables
params
c
response.body
subject
exit
post '/api/login'
post '/api/login', params, as: :json
c
exit
c
self.method(:post).source_location
post
defined?(:post)
